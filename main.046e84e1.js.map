{"version":3,"sources":["scripts/main.js"],"names":["thead","document","querySelector","tfoot","tbody","dolarToNumber","value","replace","sortTableByColumn","targetTitle","position","cellIndex","tableRows","children","innerText","toLowerCase","sort","currentRow","nextRow","localeCompare","firstElementChild","forEach","title","dataset","clickedTitle","appendSortedTable","clickEvent","target","closest","append","reverse","addEventListener","previousActiveRow","clickedRow","tableRow","classList","remove","add","body","insertAdjacentHTML","form","addRowToTable","pushNotification","description","type","positionTop","positionRight","notification","createElement","h2","p","className","style","top","right","qa","setTimeout","preventDefault","currentForm","FormData","currentName","get","currentPosition","currentOffice","currentAge","currentSalary","inputs","querySelectorAll","length","Number","toLocaleString","input"],"mappings":"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","file":"main.046e84e1.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst thead = document.querySelector('thead');\nconst tfoot = document.querySelector('tfoot');\nconst tbody = document.querySelector('tbody');\n\nfunction dolarToNumber(value) {\n  return +value.replace('$', '').replace(',', '.');\n};\n\nfunction sortTableByColumn(targetTitle) {\n  const position = targetTitle.cellIndex;\n  const tableRows = [...tbody.children];\n\n  switch (targetTitle.innerText.toLowerCase()) {\n    case 'name':\n    case 'position':\n    case 'office':\n      tableRows.sort((currentRow, nextRow) => {\n        return currentRow.children[position].innerText\n          .localeCompare(nextRow.children[position].innerText);\n      });\n      break;\n\n    case 'age':\n      tableRows.sort((currentRow, nextRow) => {\n        return currentRow.children[position].innerText\n          - nextRow.children[position].innerText;\n      });\n      break;\n\n    case 'salary':\n      tableRows.sort((currentRow, nextRow) => {\n        return dolarToNumber(currentRow.children[position].innerText)\n          - dolarToNumber(nextRow.children[position].innerText);\n      });\n      break;\n  }\n\n  return tableRows;\n}\n\n[...thead.firstElementChild.children].forEach(title => {\n  title.dataset.clickedTitle = false;\n});\n\nconst appendSortedTable = clickEvent => {\n  const title = clickEvent.target.closest('th');\n\n  if (title.dataset.clickedTitle === 'false') {\n    tbody.append(...sortTableByColumn(title));\n    title.dataset.clickedTitle = true;\n  } else {\n    tbody.append(...sortTableByColumn(title).reverse());\n    title.dataset.clickedTitle = false;\n  }\n};\n\nthead.addEventListener('click', appendSortedTable);\ntfoot.addEventListener('click', appendSortedTable);\n\nlet clickedRow = false;\nlet previousActiveRow;\n\ntbody.addEventListener('click', clickEvent => {\n  const tableRow = clickEvent.target.closest('tr');\n\n  if (clickedRow) {\n    previousActiveRow.classList.remove('active');\n    clickedRow = true;\n  }\n\n  previousActiveRow = tableRow;\n  tableRow.classList.add('active');\n  clickedRow = true;\n});\n\ndocument.body.insertAdjacentHTML('beforeend', `\n  <form class=\"new-employee-form\">\n    <label>Name:\n      <input name=\"name\" type=\"text\" data-qa=\"name\" required>\n    </label>\n    <label>Position:\n      <input name=\"position\" type=\"text\" data-qa=\"position\">\n    </label>\n\n    <label>Office:\n      <select name=\"office\" data-qa=\"office\">\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\">San Francisco</option>\n      </select>\n    </label>\n    <label>Age:\n      <input name=\"age\" type=\"number\" data-qa=\"age\" required>\n    </label>\n    <label>Salary:\n      <input name=\"salary\" type=\"number\" data-qa=\"salary\" required>\n    </label>\n\n    <button type=\"submit\">\n      Save to table\n    </button>\n  </form>\n`);\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', addRowToTable);\n\nconst pushNotification = (\n  title, description, type, positionTop, positionRight) => {\n  const notification = document.createElement('div');\n  const h2 = document.createElement('h3');\n  const p = document.createElement('p');\n\n  notification.className = `notification ${type}`;\n  notification.style.top = positionTop + 'px';\n  notification.style.right = positionRight + 'px';\n  notification.dataset.qa = 'notification';\n\n  h2.className = 'title';\n  h2.innerText = title;\n\n  p.innerText = description;\n\n  notification.append(h2, p);\n  document.body.append(notification);\n\n  setTimeout(() => notification.remove(), 5000);\n};\n\nfunction addRowToTable(clickEvent) {\n  clickEvent.preventDefault();\n\n  const currentForm = new FormData(form);\n  const currentName = currentForm.get('name');\n  const currentPosition = currentForm.get('position');\n  const currentOffice = currentForm.get('office');\n  const currentAge = currentForm.get('age');\n  const currentSalary = currentForm.get('salary');\n  const inputs = document.querySelectorAll('input');\n\n  if (currentName.length >= 4\n    && currentPosition.length\n    && currentAge >= 18\n    && currentAge <= 90) {\n    tbody.insertAdjacentHTML('beforeend', `\n    <tr>\n      <td>${currentName}</td>\n      <td>${currentPosition}</td>\n      <td>${currentOffice}</td>\n      <td>${currentAge}</td>\n      <td>$${Number(currentSalary).toLocaleString('en')}</td>\n    </tr>\n  `);\n    pushNotification('МАЛАДЄЦ', 'success', 'success', 10, 10);\n\n    [...inputs].forEach(input => {\n      input.value = '';\n    });\n  }\n\n  if (currentName.length < 4) {\n    pushNotification(\n      'Name value has less than 4 letters', 'error', 'error', 170, 10\n    );\n  }\n\n  if (!currentPosition.length) {\n    pushNotification('Write position', 'error', 'error', 10, 10);\n  }\n\n  if (currentAge < 18 || currentAge > 90) {\n    pushNotification(\n      'Age value is less than 18 or more than 90 show',\n      'error', 'error', 290, 10\n    );\n  }\n};\n"]}